{{! template-lint-disable no-action no-builtin-form-components no-curly-component-invocation no-duplicate-landmark-elements }}
<XFavicon @href={{this.favicon}} />

{{#if this.isTestingDocumentTitle}}
{{#document-title}} Testing{{/document-title}}
{{/if}}
{{#document-title}}ember-wormhole{{/document-title}}

<h1 id="title">ember-wormhole</h1>

<aside id="sidebar" class="sidebar"></aside>
<aside id="othersidebar" class="sidebar"></aside>

<p class='example'>
  Welcome. This ember-cli addon provides a component that allows for rendering
  a block in a typical Ember context in terms of bound data and action handling,
  but attached to a DOM element somewhere else on the page.
</p>

<p class='example'>
  The example app you are looking at includes an intializer which adds a div
  to the body element of this document with an ID of <code>modals</code>.
  It also has a sidebar with an element with an ID of <code>sidebar</code>.
  Finally, there is a <code>current-user</code> component, which yields a
  <code>user</code> object and is used to demonstrate bound values across
  the wormhole boundary.
</p>

<p>
  In addition to the visible wormholes on screen, there are components
  that inject Ember into the <code>head</code> of the page.
</p>

<button type="button" id="toggle-title" {{on "click" this.toggleTitle}}>Toggle Title</button>
<label>
  Favicon: <Input @value={{this.favicon}} class="favicon" />
</label>

<div class='example' id='example-modal'>
  <h2>Modal Example</h2>
  {{!-- BEGIN-SNIPPET modal --}}
  <button type="button" {{on "click" this.toggleModal}}>Toggle Modal</button>
  {{#current-user as |user|}}
  <label>
    Username: <Input @value={{user.username}} class="username" />
  </label>
  {{#if this.isShowingModal}}
  {{#ember-wormhole to='modals'}}
  {{#if this.isShowingOverlay}}
  <div role="button" class="overlay" {{on "click" this.toggleModal}}></div>
  {{/if}}
  <div class="dialog">
    <h1>Hi, I'm a simple modal dialog</h1>
    <p>Here we have some content which is bound from the context
      where the wormhole component was used: "{{user.username}}"</p>
    <button type="button" {{on "click" this.toggleModal}}>Close</button>
    <button type="button" {{on "click" this.toggleOverlay}}>Toggle Overlay</button>
  </div>
  {{/ember-wormhole}}
  {{/if}}
  {{/current-user}}
  {{!-- END-SNIPPET --}}
</div>

<div class='example' id='example-sidebar'>
  <h2>Sidebar Example</h2>
  {{!-- BEGIN-SNIPPET sidebar --}}
  {{#current-user as |user|}}
  <button type="button" {{on "click" this.toggleSidebarContent}}>Toggle Sidebar Content</button>
  <button type="button" {{on "click" this.switchSidebars}}>Switch Sidebars From Without</button>
  <button type="button" {{on "click" this.toggleInPlace}}>Toggle In Place</button>
  <label>
    First Name: <Input @value={{user.firstName}} class="first-name" />
  </label>
  <label>
    Last Name: <Input @value={{user.lastName}} class="last-name" />
  </label>
  {{#if this.isShowingSidebarContent}}
  {{#ember-wormhole to=this.sidebarId id='sidebarWormhole' renderInPlace=this.isInPlace}}
  <h1>Epic sidebar action</h1>
  <p>Here we have some content which is bound from the context
    where the wormhole component was used: "{{user.fullName}}"</p>
  <button type="button" {{on "click" this.toggleSidebarContent}}>Hide Sidebar Content</button>
  <button type="button" {{on "click" this.switchSidebars}}>Switch Sidebars From Within</button>
  {{/ember-wormhole}}
  {{/if}}
  {{/current-user}}
  {{!-- END-SNIPPET --}}
</div>